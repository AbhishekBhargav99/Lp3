import math
import random

def generator(a, b):
    if( 4*a**3 + 27*b**2 == 0):
        print('Enter valid Values of a , b');
        return False;
    x = 1;
    for i in range(0, 1000000):
        LHS = x**3 + a*x + b;
        y = int(math.sqrt(LHS));
        RHS = y**2;
        if LHS == RHS:
            return [x, y];
        else:
            x = x + 1;
    print("Could not Find values of x, y on curve. Enter another point for a, b");
    return False;

G = [0, 0];
while True:
    a = int(input('Enter a : '));
    b = int(input('Enter b : '));
    G = generator(a, b);
    if(G != False):
        break;
    
print('Generator :', G);
privA = int(input("Private Key of A : ")); 
privB = int(input("Private Key of B : "));
m  = int(input('Enter Plain Text to be sent to B by A : '));

# pubA = pa*G;
pubA = [ privA*G[0], privA*G[1] ];
pubB = [ privB*G[0], privB*G[1] ];
print('Public Key of A : ', pubA);
print('Public Key of B : ', pubB);


k = random.randint(1, 20);

# CipherText generates By A to be given to B
# { kG, m + kpubB}

# kG
c1 = (k*G[0] + k*G[1]);
# m + kpubB
c2 = m + ( k*pubB[0] + k*pubB[1] );

cipherText = [c1, c2];
print('CipherText sent to B : ', cipherText);


r  = c1 * privB;
# plaintext = m + k*Pb - k*G*privB => pb = privB*G => m

plainText = c2 - r;
print('Plain Text generated by B : ', plainText);






